Block Label,Cluster Label,sentences to be labeled,question title,question link,question description
,,Let me show some specific examples:,Pytorch LSTM vs LSTMCell,www.stackoverflow.com/questions/57048120,"What is the difference between [LSTM (hyper-link)] and [LSTMCell (hyper-link)] in Pytorch (currently version 1.1)? It seems that LSTMCell is a special case of LSTM (i.e. with only one layer, unidirectional, no dropout). 
Then, what's the purpose of having both implementations? Unless I'm missing something, it's trivial to use an LSTM object as an LSTMCell (or alternatively, it's pretty easy to use multiple LSTMCells to create the LSTM object)
"
Null,Null,[code snippet]
,,The key difference:,Pytorch LSTM vs LSTMCell,www.stackoverflow.com/questions/57048120,"What is the difference between [LSTM (hyper-link)] and [LSTMCell (hyper-link)] in Pytorch (currently version 1.1)? It seems that LSTMCell is a special case of LSTM (i.e. with only one layer, unidirectional, no dropout). 
Then, what's the purpose of having both implementations? Unless I'm missing something, it's trivial to use an LSTM object as an LSTMCell (or alternatively, it's pretty easy to use multiple LSTMCells to create the LSTM object)
"
Null,Null,Paragraph end
,,"LSTM: the argument 2, stands num_layers, number of recurrent layers.",Pytorch LSTM vs LSTMCell,www.stackoverflow.com/questions/57048120,"What is the difference between [LSTM (hyper-link)] and [LSTMCell (hyper-link)] in Pytorch (currently version 1.1)? It seems that LSTMCell is a special case of LSTM (i.e. with only one layer, unidirectional, no dropout). 
Then, what's the purpose of having both implementations? Unless I'm missing something, it's trivial to use an LSTM object as an LSTMCell (or alternatively, it's pretty easy to use multiple LSTMCells to create the LSTM object)
"
,,There are seq_len * num_layers=5 * 2 cells.,Pytorch LSTM vs LSTMCell,www.stackoverflow.com/questions/57048120,"What is the difference between [LSTM (hyper-link)] and [LSTMCell (hyper-link)] in Pytorch (currently version 1.1)? It seems that LSTMCell is a special case of LSTM (i.e. with only one layer, unidirectional, no dropout). 
Then, what's the purpose of having both implementations? Unless I'm missing something, it's trivial to use an LSTM object as an LSTMCell (or alternatively, it's pretty easy to use multiple LSTMCells to create the LSTM object)
"
,,No loop but more cells.,Pytorch LSTM vs LSTMCell,www.stackoverflow.com/questions/57048120,"What is the difference between [LSTM (hyper-link)] and [LSTMCell (hyper-link)] in Pytorch (currently version 1.1)? It seems that LSTMCell is a special case of LSTM (i.e. with only one layer, unidirectional, no dropout). 
Then, what's the purpose of having both implementations? Unless I'm missing something, it's trivial to use an LSTM object as an LSTMCell (or alternatively, it's pretty easy to use multiple LSTMCells to create the LSTM object)
"
Null,Null,Paragraph end
,,"LSTMCell: in for loop (seq_len=5 times), each output of ith instance will be input of (i+1)th instance.",Pytorch LSTM vs LSTMCell,www.stackoverflow.com/questions/57048120,"What is the difference between [LSTM (hyper-link)] and [LSTMCell (hyper-link)] in Pytorch (currently version 1.1)? It seems that LSTMCell is a special case of LSTM (i.e. with only one layer, unidirectional, no dropout). 
Then, what's the purpose of having both implementations? Unless I'm missing something, it's trivial to use an LSTM object as an LSTMCell (or alternatively, it's pretty easy to use multiple LSTMCells to create the LSTM object)
"
,,"There is only one cell, Truly Recurrent",Pytorch LSTM vs LSTMCell,www.stackoverflow.com/questions/57048120,"What is the difference between [LSTM (hyper-link)] and [LSTMCell (hyper-link)] in Pytorch (currently version 1.1)? It seems that LSTMCell is a special case of LSTM (i.e. with only one layer, unidirectional, no dropout). 
Then, what's the purpose of having both implementations? Unless I'm missing something, it's trivial to use an LSTM object as an LSTMCell (or alternatively, it's pretty easy to use multiple LSTMCells to create the LSTM object)
"
Null,Null,Paragraph end
,,"If we set num_layers=1 in LSTM or add one more LSTMCell, the codes above will be the same.",Pytorch LSTM vs LSTMCell,www.stackoverflow.com/questions/57048120,"What is the difference between [LSTM (hyper-link)] and [LSTMCell (hyper-link)] in Pytorch (currently version 1.1)? It seems that LSTMCell is a special case of LSTM (i.e. with only one layer, unidirectional, no dropout). 
Then, what's the purpose of having both implementations? Unless I'm missing something, it's trivial to use an LSTM object as an LSTMCell (or alternatively, it's pretty easy to use multiple LSTMCells to create the LSTM object)
"
Null,Null,Paragraph end
,,"Obviously, It is easier to apply parallel computing in LSTM.",Pytorch LSTM vs LSTMCell,www.stackoverflow.com/questions/57048120,"What is the difference between [LSTM (hyper-link)] and [LSTMCell (hyper-link)] in Pytorch (currently version 1.1)? It seems that LSTMCell is a special case of LSTM (i.e. with only one layer, unidirectional, no dropout). 
Then, what's the purpose of having both implementations? Unless I'm missing something, it's trivial to use an LSTM object as an LSTMCell (or alternatively, it's pretty easy to use multiple LSTMCells to create the LSTM object)
"
Null,Null,Paragraph end
