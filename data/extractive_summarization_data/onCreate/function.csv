" onCreate is responsible for creating your tables inside your SQLite database, and onUpgrade will be responsible for upgrading your database if you do make any changes. "
This method will not be called if you’ve changed your code and relaunched in the emulator. 
"After executing in first time deployment, this method will not be called onwards. "
"onCreate() is called when you call getWritableDatabase() or getReadableDatabase() on the helper and the database file does not exist.  If the file is already there and the version number is the requested one, no callback such as onCreate() is invoked."
" Each time I say to the Android SDK I want to get a connection to my database, Android will determine whether the database exists or not.  If it doesn't exist yet, Android will call the onCreate method. "
" In  particular, the starter code gives us   one function or one method that is already being  overridden.  And that's called onCreate, to the   Android system will automatically invoke or call  this function when our application is starting up   when it's creating our screen. "
"However, this method will only be called if the SQLite file is missing in your app’s data directory (/data/data/your.apps.classpath/databases). "
1) onCreate(): This method invoked only once when the application is start at first time .  So it called only once
"As already explained in the older answer, if the database with the name doesn't exists, it triggers onCreate. "
If you want onCreate() to run you need to use adb to delete the SQLite database file. 
onCreate() is only run when the database file did not exist and was just created. 
Sqlite database override two methods 
"2)onUpgrade() This method called when we change the database version,then this methods gets invoked.It is used for the alter the table structure like adding new column after creating DB Schema "
Database version is stored within the SQLite database file. 
Another issue is that SQLiteOpenHelper lifecycle methods such as onCreate() are invoked inside an transaction. 
" It's a late  initialization because we're going to initialize   it inside of the onCreate method and not in the  constructor, which is why it's late initialization   is a variable and that we're calling it at base  mount the convention I follow that the name of   the variable is exactly equal to the name of the  ID. "
" After the set content   view, we are going to say at base mount find  view by ID et base amount. "
" And then because SQLiteOpenHelper class is an abstract class, you have to implement to abstract method here.  Those are onCreate and onUpgrade. "
" And you can implement all the predefined methods, which are already provided by SQLiteOpenHelper class. "
 These methods will be called automatically by the Android SDK. 
 Next we have the onCreate method.  This is where the SQL we've been talking about and our new contract class are used together. 
" The first time the database is used, SQLiteOpenHelper's onCreate will be called. "
 We need to write the correct SQL statement string so that we can create the table sunshine needs. 
 We then have the system execute this SQL by calling db dot execSQL. 
onCreate() method is creating the tables you’ve defined and executing any other code you’ve written. 
SQLiteOpenHelper should call the super constructor. 
The onUpgrade() method will only be called when the version integer is larger than the current version running in the app. 
"If you want the onUpgrade() method to be called, you need to increment the version number in your code. "
onCreate is called for the first time when creation of tables are needed.  We need to override this method where we write the script for table creation which is executed by SQLiteDatabase.
"[SQLiteOpenHelper (hyper-link)] [onCreate() (hyper-link)] and [onUpgrade() (hyper-link)] callbacks are invoked when the database is actually opened, for example by a call to [getWritableDatabase() (hyper-link)]. "
The database is not opened when the database helper object itself is created. 
SQLiteOpenHelper versions the database files. 
"As an implication, you should not catch SQLExceptions in onCreate() yourself. "
onUpgrade() is only called when the database file exists but the stored version number is lower than requested in the constructor. 
The onUpgrade() should update the table schema to the requested version. 
"When changing the table schema in code (onCreate()), you should make sure the database is updated. "
Delete the old database file so that onCreate() is run again.  This is often preferred at development time where you have control over the installed versions and data loss is not an issue.
Some ways to delete the database file:  Uninstall the application. 
Use the application manager or adb uninstall your.package.name from the shell. 
Clear application data. 
Use the application manager. 
Increment the database version so that onUpgrade() is invoked. 
This is slightly more complicated as more code is needed. 
"For development time schema upgrades where data loss is not an issue, you can just use execSQL(""DROP TABLE IF EXISTS <tablename>"") in to remove your existing tables and call onCreate() to recreate the database. "
"For released versions, you should implement data migration in onUpgrade() so your users don't lose their data. "
(OnCreate() is not executed when the database already exists) 
Points to remember when extending SQLiteOpenHelper 
override onCreate and onUpgrade (if needed) 
onCreate will be invoked only when getWritableDatabase() or getReadableDatabase() is executed.  And this will only invoked once when a DBName specified in the first step is not available.
You can add create table query on onCreate method 
Whenever you want to add new table just change DBversion and do the queries in onUpgrade table or simply uninstall then install the app. 
