label,sentences to be labeled,question title,question tags,question link,question description
,Why not transpose the input to BatchNorm1d and then transpose it back?,PyTorch LinearLayer+BatchNorm1d with a 3D input,<pytorch><batch-normalization>,www.stackoverflow.com/questions/65398540,"I would like to apply a BatchNorm1d after a Linear. My input is a 3D multivariate time series of shape [batch_size, n_variables, timesteps]. The Linear performs the linear transformation on the third dimension so that the new shape is [batch_size, n_variables, LinearLayer_out_features]. My problem occurs with the BatchNorm1d, I would like to apply it on the third dimension but, for a 3D input, BatchNorm1d operation is done over the second dimension (even for a 3D tensor). Do you have any suggestion on how to do that?
"
,[code snippet],PyTorch LinearLayer+BatchNorm1d with a 3D input,<pytorch><batch-normalization>,www.stackoverflow.com/questions/65398540,"I would like to apply a BatchNorm1d after a Linear. My input is a 3D multivariate time series of shape [batch_size, n_variables, timesteps]. The Linear performs the linear transformation on the third dimension so that the new shape is [batch_size, n_variables, LinearLayer_out_features]. My problem occurs with the BatchNorm1d, I would like to apply it on the third dimension but, for a 3D input, BatchNorm1d operation is done over the second dimension (even for a 3D tensor). Do you have any suggestion on how to do that?
"
,This doesn't create a copy of your tensor.,PyTorch LinearLayer+BatchNorm1d with a 3D input,<pytorch><batch-normalization>,www.stackoverflow.com/questions/65398540,"I would like to apply a BatchNorm1d after a Linear. My input is a 3D multivariate time series of shape [batch_size, n_variables, timesteps]. The Linear performs the linear transformation on the third dimension so that the new shape is [batch_size, n_variables, LinearLayer_out_features]. My problem occurs with the BatchNorm1d, I would like to apply it on the third dimension but, for a 3D input, BatchNorm1d operation is done over the second dimension (even for a 3D tensor). Do you have any suggestion on how to do that?
"
,[https://pytorch.org/docs/stable/generated/torch.transpose.html (hyper-link)],PyTorch LinearLayer+BatchNorm1d with a 3D input,<pytorch><batch-normalization>,www.stackoverflow.com/questions/65398540,"I would like to apply a BatchNorm1d after a Linear. My input is a 3D multivariate time series of shape [batch_size, n_variables, timesteps]. The Linear performs the linear transformation on the third dimension so that the new shape is [batch_size, n_variables, LinearLayer_out_features]. My problem occurs with the BatchNorm1d, I would like to apply it on the third dimension but, for a 3D input, BatchNorm1d operation is done over the second dimension (even for a 3D tensor). Do you have any suggestion on how to do that?
"
