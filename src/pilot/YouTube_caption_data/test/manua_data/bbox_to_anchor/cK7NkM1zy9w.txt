Welcome everybody, you're watching mr fugu data science. Today we're going to work with the retail  
sales data that we did a few videos back. i'm going to put a card above. So you can see those  
plots, as well for time series data. As always hit me up on instagram and twitter, and if you like  
to help support the channel feel free right here. Thank you, to the recent subscribers and viewers i  
greatly appreciate it. Let's get into this. Here's the imports that you're gonna need if you would  
like to follow along, and here's the data that we're working with. Once again we're interested  
in the items that were sold which is called description. We're creating a new column  
between quantity and unit price, multiplying those together to create our sales total, and then we're  
going to extract as well our countries creating our new column sales total. We just multiply the  
quantity and the unit price, then we want the top 10 items that were sold. In order to do that  
it's quite lengthy. If you look at this. So i first subset these data. After i subset the three  
columns that i was interested in, i performed a group by which would take the country and  
then the sales total in that order. The next step was sorting these data by the sales in descending  
order so we get the top 10 items that were sold with the total amount or total sales for each one  
of those items and the corresponding country with each item. So you notice that this is a nested  
table, right here. The outer portion is 
the description and then your index values  
are the country and the sales total. This is a multi-indexed data frame or panda series.  
Notice that the United Kingdom has multiple items, so we save that information into some  
made a variable name gg. In order to call these data, we could do some formatting. i convert the  
indexes into a list which provides these tuples which are your country and the sales amount with  
respect to each item description. Next step, we do is we take the description from gg, and we need to  
iterate through it to take our list of items. Now we have 10 items which are from our list. We will  
then take that and create a data frame with the column names from that tuple. We will also take  
the items that were from the list that we created above from our description. We will concatenate  
these all together here and we will save it under this variable ff. And then we will sort by the  
country's name which is this. Which you see right here. So we're getting closer to what we want for  
plotting. You'll notice that France only has one. Japan has two and then there's five additional  
for the uk. So what is this showing me? The top 10 items that were sold with their sales and the  
country that it corresponded to if i'm using this these countries for a nested bar chart. Then we're  
going to have an issue. Because, it's not going to line up for the items since, the items are what  
we're going to use for the x-axis. We would like to instead figure a way to map these sales. Let me  
explain this. What i did was, i created a default dictionary allowing me to map the country to its  
actual items that we're in a list. Now that's what i did here by converting the sorted dictionary  
into values which looks like this. And then i just manipulated it through this default dictionary  
which creates this. From there we need to take the unique names from the items that were sold  
and to make this match up what i did was iterate through this right here. Since it's a dictionary  
i called it as items which i iterated through the dictionary list from above, converted this  
as tuples. From there i went inside the first indexed item which is our list, and i did a set  
difference. I did this because there's 10 unique items but, each country only has maybe one or a  
couple of them. But not all of them. So i did a set difference, and then i created a dictionary  
to store the values. I then made sure to create another dictionary with the country that we're  
iterating over and instead using the length of each nested portion that we're iterating through.  
Taking the length of the set difference and then i'm doing the same thing for the sales. And i'm  
just multiplying it by zero because, there's no sales. And then this is what you end up, with  
right here. That's what it prints out as so you have the first country which is France, and these  
are all of the items that were not inside of it for the initial data frame that we started with.  
Then we're going to have all the sales that correspond to it. And then we did the same thing  
for Japan, Netherlands and uk. But there's something that you'll end up seeing that's  
interesting. After we do that and we create a new data frame, it's nested and we have to use  
json normalize that i've used in many videos. You could see the card above for some of my  
json parsing videos. And after you do that you're going to notice one thing. You end up pulling out  
the nested portion of the items, country and sales data. That's what causes your new names  
for your columns to have that dot notation. Because it extracted the nested portion out  
of it. But now we have to get rid of this list of each one of our columns and that's why we use the  
explode. Which is here. Which cleans up our data set. Now we have 25 entries to append  
to our original data set. We take that data and we reset the index for everything, and then we rename  
the columns and i print it off. So if you wanted to see everything that's what it looks like,  
for all of our columns. So we're getting closer to what we want. We append to the end of the data  
frame, these new rows that we just made and i did something here it's quite interesting. I sorted  
all of this information by these two columns. The first column will be an ascending order  
the second one will be in descending order so the countries was sorted in alphabetical order, then  
descending order for all of the sales information. And then the items stay the same so we're one step  
closer to what we want so we iterate through the country names and then we append a group by items.  
Taking the sum of the sales data and that's what we have here which is going to be used for doing  
our nested bar chart plot. You're going to notice this right here. This had to be used because, the  
ordering of our plot doesn't add up. When we do something next we're going to come right back to  
this. In this portion here, when you do this plot we're creating our x labels taking our y which is  
our nested list of the sales data. Creating here the plot size, iterating through this, here's our  
x here's our y and here's the labels. That we're going to use with respect to the country names.  
You need to remember here, our iterator. So we can match our legend properly, and in this case you do  
need an alpha value to make a somewhat translucent plot. And you're going to see why in a second.  
Just like last time, we need to label our y-axis and this is in great British pounds. Do our title  
the position of our legend, rotate our ticks for our plot labels. I created a grid formatting.  
Then this right here, is used so we can put the actual values from the plots corresponding to each  
one of our labels above the bars. I had to split this up to do the five, then five through ten. And  
then positioning each one of the x positions here for the text formatting. it's trial and error.  
And you plot it out, and it looks pretty cool. And this was extremely difficult to figure out. But,  
it's a pretty cool plot we have the top 10 items sold and the countries which correspond to it.  
Scroll down slowly and you'll notice that this right here, corresponds to two countries. That's  
why you needed that alpha value to be somewhat translucent. I had to iterate these piecewise from  
zero to five which stops right here, and then from this one going here is five through ten. We'll  
scroll down some and notice that here's all of the items that we have for the outer portion for  
x-axis are nine new unique values. But we have ten of them because, this one repeats for the rabbit  
night light all right. This is a very challenging plot and i highly suggest that you go back over  
this. So these, each one of these. Let's go up top. Let's scroll back up and go back these values  
here, will get you plotted correctly. But when you want to align everything correctly for your labels  
you then need to go back and look at these one by one. Because, they do not match the ordering  
from this plot. Your labels will be incorrect, and you have to fix those and it takes some time  
going back and forth to make sure these all line up properly. Then to get this correctly lined  
up you need to take the points that correspond to these and manually plug these in doing this  
through a function, mapping these efficiently is not easy. Feel free to do it on your own.  
And you notice, here's the order labels that we had to put in which looks different than the x  
information that we have. But this is correct. I went back and looked. Now let's get into doing  
a pie chart which is a lot easier with our data. Here's the sales totals that we just parsed out,  
i took these two specific columns, i did a group by country, summed everything together. And then  
took to sales. Let's look at this right here. So here's the nest of charlotte we have here's the  
outermost portion. Here's your index which is your countries. Then you need to do sorting on this,  
so we can get the top 10 countries of sales. So here's the country's sales right here. But we need  
to do some mapping to this, so we take our sales totals and then we create a tuple of each one of  
the countries corresponding to the sales. Then i create a data frame for the country and the sales  
and then i just put it in descending order. And take the top 10 entries and that's what we end  
up with here. Which is going to be used for the pie plot. i decided to round the data so we can  
see that top 10 countries contain 97, of the data. That's why i set it up like this because,  
you have 37 countries. Doing a plot, it looks horrendous. This is for simplicity's sake  
adjusted the size for a pie plot. Took the labels which is our... You could think of this as your  
x. But it's your labels and the sales data this explode is going to be interesting pulls out each  
entry, we have 10 entries. Basically, think of this as the first entry i'm pulling out of the  
plot a little bit. The higher this number, the more it's going to be adjusted. Outside of the  
plot you're going to see that in a second we do this sub-plotting so we can adjust this pie plot  
for all of our label information. Let's do this so we can see this we take in our sizes, which is the  
sales the actual label name, do formatting for the percentages. And this explode is what is going to  
pull out your each one of your wedges further from the plot. Depending on how you adjust this  
sizing. Then this is how far your label will be from the actual wedge. Here's the distance of  
the actual adjusting the percentages. When you do the equal, it's going to give you a circle.  
When you start changing this you start getting more of an oblong, or ugly looking circle.  
Then you do your title, and you print it out. So you're going to see this looks kind of goofy. We  
have really small percentages that are grouped together here. In order to make this somewhat  
legible. i elongated this and made it highly exaggerated for us to understand what's going on,  
okay. This may not be exactly what you need. May be kind of ugly, for a presentation but  
it lets you know what these specific parameters are doing. So you can adjust these right here,  
and move these left and right using this. This is moving these light the labels for Japan, etc. And  
you could also rotate those. We could do this plot differently, adjusting the size, making a smaller,  
calling in our x and our y's are the names of the colors manually. And then we can adjust the  
text that we want, and do some rotation. As well as increase or decrease the the radius  
of the circle. And you can do some formatting here for your country information. The amount  
of decimal points you would like, as 
well as zipping together your percentage  
and your country name as a new label that's taken outside like as a legend. And that's what's going  
on here. You're creating your legend, and zipping everything together. it'll be illustrated better,  
right here. When you have something really ugly, like this. What we did above, can be utilized to  
help you out with this legend properly formatted. i think this would probably look a lot better for  
this kind of pie plot, considering you have a lot of really small values here. But that'll be  
the conclusion of this video. Please like, share and subscribe. And if you subscribe turn on that  
notification bell. I hope to spread utility to someone. Feel free to hit me up on instagram and  
twitter. As well as if you'd like to help support the channel. i'll see you in the next video. Bye