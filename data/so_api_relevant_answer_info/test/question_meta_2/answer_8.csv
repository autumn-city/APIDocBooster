Block Label,Cluster Label,sentences to be labeled,question title,question link,question description
,,"pytorch uses CuDNN's LSTM underlayer(even when you don't have CUDA, it still uses something compatible) thus it has one extra bias term.",Import LSTM from Tensorflow to PyTorch by hand,www.stackoverflow.com/questions/55229636,"I am trying to import a pretrained Model from tensorflow to PyTorch. It takes a single input and maps it onto a single output. 
Confusion comes up, when I try to import the LSTM weights
I read the weights and their variables from the file with the following function:

[code snippet]
Then I am inspecting the shapes of the weights
[code snippet]
furthermore the variables are defined as
[code snippet]
So I can say that the first element of  W defines the  Kernel of an LSTM and the second element define its bias. According to [this post (hyper-link)], the shape for the Kernel is defined as
[input_depth + h_depth, 4 * self._num_units]
and the bias as [4 * self._num_units]. We already know that input_depth is 1. So we get, that h_depth and _num_units both have the value 50.
In pytorch my LSTMCell, to which I want to assign the weights, looks like this:
[code snippet]
The first two entries can be covered by the first value of W which has the shape (51,200). But the LSTMCell from Tensorflow yields only one bias of shape (200) while pytorch wants two of them
And by leaving the bias out I have weights left over:
[code snippet]
Thanks!
"
Null,Null,Paragraph end
,,"So you can pick two numbers with their sum equal to 1(0 and 1, 1/2 and 1/2 or anything else) and set your pytorch biases as those numbers times TF's bias.",Import LSTM from Tensorflow to PyTorch by hand,www.stackoverflow.com/questions/55229636,"I am trying to import a pretrained Model from tensorflow to PyTorch. It takes a single input and maps it onto a single output. 
Confusion comes up, when I try to import the LSTM weights
I read the weights and their variables from the file with the following function:

[code snippet]
Then I am inspecting the shapes of the weights
[code snippet]
furthermore the variables are defined as
[code snippet]
So I can say that the first element of  W defines the  Kernel of an LSTM and the second element define its bias. According to [this post (hyper-link)], the shape for the Kernel is defined as
[input_depth + h_depth, 4 * self._num_units]
and the bias as [4 * self._num_units]. We already know that input_depth is 1. So we get, that h_depth and _num_units both have the value 50.
In pytorch my LSTMCell, to which I want to assign the weights, looks like this:
[code snippet]
The first two entries can be covered by the first value of W which has the shape (51,200). But the LSTMCell from Tensorflow yields only one bias of shape (200) while pytorch wants two of them
And by leaving the bias out I have weights left over:
[code snippet]
Thanks!
"
Null,Null,[code snippet]
