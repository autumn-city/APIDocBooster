Welcome to Engineering Python.
This is a Python programming course for engineers.
In this video, I'll talk about MatPlotLib
subplots, gridspec, and axes.
Before we start, we need to turn on the Jupyter
notebook renderer so we can see all the plotting
results in this browser.
We need to import pyplot as plt.
We also need to import numpy as np.
Next, we create the data arrays we will use
in this video.
X contains 15 points evenly distributed between
negative pi and positive pi. C contains the
cosine values of X.
S contains the sine values of X.
They both have the same shape as X.
After all these preparations, let's create
a figure.
The size if 5 inches by 4 inches.
The dpi is 80.
Using this subplot function, we will create
some basic plotting units called Axes.
The number of rows is 2, the number of columns
is 1.
It will create a total of 2 times 1 equals
2 axes in the figure window.
The last 1 is the index.
It means, we are current doing the plotting
in the first axes.
Next, we plot the cosine curve in this Axes.
The second subplot refers to the second axes.
We plot the sine curve in this Axes.
Finally, we show the figure.
The result is in Figure 1.
We can also create horizontally placed Axes
using subplot.
In this subplot function, the number of rows
is 1, and the number of columns is 2.
In the first Axes, we plot the cosine curve.
In the second Axes, we plot the sine curve.
Also, we can use the grid function to control
whether we need to show the grid.
A string off will turn off the grid.
On will turn it on.
In this example, we turn the grid in the left
Axes off and turn the grid in the right Axes
on.
Next, we create four Axes using the subplot
function.
2 rows and 2 columns.
In the first Axes, we plot the cosine function.
This string specifies the line color, the
line style, and the marker.
b means blue, the dash means a solid line,
the star means the data points will be marked
by stars.
In the second Axes, we plot the sine function.
r means red.
We didn't define the line style, that means,
we should not connect these dots with any
lines.
s means the data points will be marked by
squares.
In the third Axes, we plot the negative cosine
function.
g means green, the double dashes mean the
dashed line, v means the data points will
be marked by triangles.
In the fourth Axes, we plot the negative sine
function.
m means magenta, the colon means the dotted
line, o means the data points will be marked
by circles.
The result is shown in Figure 3.
Now, let's talk about gridspec.
GridSpec can create a subplot across multiple
cells.
It can be illustrated using this image.
We have a total of 9 cells.
3 rows and 3 columns.
Remember, in Python, indexes start from 0
if we count in ascending order.
This is the zeroth row, this is the first
row, this is the second row.
If we count backwards, the indexes start with
-1.
So, This index is negative 1, this is negative
2, and this is negative 3.
The same rules apply to the column indexes.
In the code, we need to import the gridspec
sub-module from matplotlib.
Then we create a figure and define a grid
using the GridSpec class in the gridspec module.
The grid contains 3 rows and 3 columns, like
what we showed here.
The name of this object is gs.
We create the first Axes using the subplot
function in the zeroth row and all the columns.
In this Axes, we plot the cosine function.
We create the second Axes in the first row
and all the columns except the last one.
In this Axes, we plot the sine function.
We create the third Axes in the last row and
zeroth column.
In this Axes, we plot the negative cosine
function.
We create the fourth Axes in row number -1
and column number -2.
In this Axes, we plot the negative sine function.
We create the fifth Axes in the first and
second rows and the last column.
In this Axes, we plot the sum of cosine and
sine divided by 2.
Axes is the most basic and most flexible unit
for creating subplots.
It allows placement of plots at any location
in the figure.
In this example, we use the axes function
to create the first Axes.
The argument is a list of four elements.
This 0.1 means the distance between the left
side of this Axes to the left border of the
figure window is 10% of the total width of
the figure window.
This 0.1 means the distance between the bottom
side of this Axes to the bottom border of
the figure window is 10% of the total height
of the figure window.
This 0.8 means the width of the Axes from
the left to the right is 80% of the total
width of the figure window.
This 0.8 means the height of the Axes from
the bottom to the top is 80% of the total
height of the figure window.
In this large Axes, we plot the sine function.
Next, we use the axes function to create the
second Axes.
It takes another list of four elements.
This 0.2 means the distance between the left
side of this Axes to the left border of the
figure window is 20% of the total width of
the figure window.
This 0.6 means the distance between the bottom
side of this Axes to the bottom border of
the figure window is 60% of the total height
of the figure window.
This 0.3 means the width of the Axes from
the left to the right is 30% of the total
width of the figure window.
This 0.3 means the height of the Axes from
the bottom to the top is 30% of the total
height of the figure window.
In this small Axes, we plot the cosine function.
The result is shown in Figure 5.
Okay, that was about MatPlotLib subplots,
gridspec, and axes.
The course materials are available on YouTube
and GitHub.
You can watch the course videos in sequence.
If you like this video, please subscribe and
share.
I'm Yong Wang.
Thanks for watching.