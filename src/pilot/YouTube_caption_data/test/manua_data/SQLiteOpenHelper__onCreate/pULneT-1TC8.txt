In this lecture, I’ll give you a brief overview of SQLite Database handling in Android.In Android, there are several ways to store 
persistent data. SQLite is one way of storing app data. It is a very lightweight database that comes with Android OS. In Android, 
integrating SQLite is a tedious task as it needs writing a lot of boilerplate code to store simple data. Saving data to a database is ideal for 
repeating or structured data, such as contact information. For managing all the 
operations related to the database, a helper 
class has been provided by Android and it is called SQLiteOpenHelper. It takes care of opening the database if it exists, creating it if it 
does not exists, and upgrading it as necessary. We need to create a class (let’s say, DatabaseHelper) that extends from 
SQLiteOpenHelper implementing onCreate() and onUpgrade(). 
This class performs CRUD operations (Create, Read, Update and Delete) on the database. Database names must be unique within an 
app, not across all the apps. public void execSQL(String sql) method belongs to SQLiteDatabase class. It executes a single 
SQL statement that is NOT a SELECT or any other SQL statement that returns data. If the SQL string is invalid, throws SQLException. 
Inside activity, where you want to use database, create an object of DatabaseHelper (which extends from SQLiteOpenHelper) and 
call the method getWritableDatabase() on that DatabaseHelper object. 
And this is going to give you an object of 
SQLiteDatabase. This SQLiteDatabase object is going to represent the database you have and you are going to use that object 
to perform the different queries that you want to do. SQLiteDatabase class has methods to create, delete, execute SQL commands and 
perform other common database management task. SQLite is efficient because it avoids the database creation overhead by creating the 
database only when someone tries to access it for the first time. By initializing DatabaseHelper, we have not yet accessed 
the database. To access the database object that represents the physical database file stored on our device, 
call getWritableDatabase() method on DatabaseHelper object and that will trigger the other lifecycle methods of SQLiteOpenHelper.