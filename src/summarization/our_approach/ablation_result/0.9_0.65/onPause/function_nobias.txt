 So where onCreate is called when the activity is first created, onPause it's going to be called when you leave the activity. 
onPause() is always called on your Activity if it is in the foreground when Android wants to do something else.  It may start another Activity which may result in your Activity's onStop() getting called. It may just call onResume() on your activity. It may just kill your process without calling any more of your lifecycle methods.
If you can still see any part of it (Activity coming to foreground either doesn't occupy the whole screen, or it is somewhat transparent), onPause() will be called. 
If you need to save any state in your activity you need to save it in onPause().  onStop() may be called after onPause(), or it may not. Depends on the situation.
Whenever some new activity occurs and occupies some partial space of the Screen.  So your previously running activity is still visible to some extent. In this Case, the previously running activity is not pushed to Back Stack. So, here only onPause() method is called.
