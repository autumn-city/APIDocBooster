Hello everyone, this tutorial is about simple 
linear regression. I'm going to show you how we can  
do simple linear regression from scratch by just 
using Python NumPy. The following is the function  
of simple linear regression, where Y represents n 
observations of y, X represents n observations of X.  
So, x1 to x n and y 1 to y n are all observations, namely 
sample data, whereas b0 and b1 are ones that  
we need to calculate from the sample data. We 
can write out this function into a matrix format.
The first step of matrix calculation is to times 
the x transpose, namely, we're going to multiply  
x transpose on both sides of the equation. 
After doing that, we'll notice that x transpose  
times x becomes a square matrix. Therefore,
we can calculate the inverse matrix of that.
So we're going to multiply x transpose 
x inverse on both sides of the equation.  
Now, we can see that an inverse matrix times 
itself will result in one, namely that on the  
right hand side equation, it will only have the B, namely the b0 and b1.  
Namely ones that we're going to calculate. And 
on the left hand side, it is all the observations.
Remember that if using NumPy,
we do not really need to know how to do 
this calculation manually. We just need to  
know that how we can write out this part 
using the functions within NumPy.
Okay, so the next, I'm going to use an example to 
explain how we can do that in NumPy. Suppose that  
x is the price and y is the sales. So we're going 
to see that with price can predict sales.
This is the hypothetical data of x matrix. We 
can run that to see how the matrix looks like.  
We can also use this part of code to 
generate some hypothetical data of y.  
This is how the y matrix looks like. There are three types of calculations  
we need to do in a matrix calculation. One is 
transpose, one is the production of two matrices or  
three matrices, namely one matrix multiplies another 
matrix. The third one is the inverse of the matrix.
So let's do the first step, which is the inverse 
sorry the transpose of X matrix.  
This is the X matrix. We're going to do the transpose of that. We can use the transpose function to do that.
So this is the result of the transpose of X matrix. The next is that we're going to  
multiply the X transpose on the both sides of the equation. 
So we need to calculate the X transpose times X.  
So this is the we can use the matmul() 
function. We can also use just the @  
notation to do the calculation. We'll see that 
this part and this part generate the exactly  
same result. So as you can see that, these two results are exactly the same.
After getting X transpose X, in step 3, we're going to calculate the  
inverse of this part. We can use this function within NumPy to  
calculate the inverse of this part. So we run 
that. This is the inverse matrix of this one. 
So we got an inverse matrix. We got the X transpose.
So the final step is that we just need to multiply  
all these three matrices together. We can just use 
the @ notation to multiply these three matrices.  
So we calculate that. We will get the result of 
the B, namely the b0 and the b1. So this is the  
intercept, and this is the regression coefficient 
namely the slope. So we can write it out as a  
function statement. So this is 
the intercept, and this is the slope. So this is done.  
We can also verify whether we calculate 
it correctly by using the SciPy. So the  
basic idea is that we use the linear regression 
function in the SciPy to see whether we calculate  
correctly. So you can see 
that, the SciPy also produced the  
slope and the intercept, which are exactly 
the same as we did using the matrix method.  
We can also plot the result. So this is the the plot. These blue points  
are the observations. And this red line is the 
fitted line. So that's it. Thank you for watching.