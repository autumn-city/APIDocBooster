"addToBackStack(""TAG"") and popBackStackImmediate(""TAG"") always revert to fragment condition  without any data in the UI right before fragment is created or added to activity ! "
addtoBackStack method can be used with add() and replace methods.  It serves a different purpose in Fragment API.
" When specifying a fragment transaction, you can call add to back stack to add the fragment transaction to the back stack.  Then, when the user hits the Back button, instead of your activity being finished, the fragment transaction is reversed.  Only when there are no more fragment transactions will the Back button finish your activity. "
"We can see the exact difference when we use addToBackStack() together with add() or replace().  When we press back button after in case of add()... onCreateView is never called, but in case of replace(), when we press back button ... oncreateView is called every time."
You can also go back to the previous fragment in the backStack with the popBackStack() method.  For that you need to add that fragment in the stack using addToBackStack() and then commit() to reflect. This is in reverse order with the current on top.
What is addToBackStack 
What is the purpose? 
Fragment API unlike Activity API does not come with Back Button navigation by default.  If you want to go back to the previous Fragment then the we use addToBackStack() method in Fragment.
 The second case is around notifications.  We talked about how the Back button pops the back stack.  A natural corollary is that the Back button shouldn't cross into different tasks-- a convention since the days of Android 3.0.  It's just a single stack from where you are to the launcher. 
 And the fragment manager lets you do that by setting something called the back stack.  So the back stack is a list of prior points in your activities that may can return to by hitting back button.  And all you have to do to make this work is in your main activity before you make a change that you want to return to-- so here's where I will place the input activity with the output activity. 
1) fragmentTransaction.addToBackStack(str); 
"Description - Add this transaction to the back stack.  This means that the transaction will be remembered after it is committed, and will reverse its operation when later popped off the stack."
